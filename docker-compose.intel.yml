version: "3.0"

services:
  ubuntu:
    build: 
      context: dockerfile/ubuntu
      dockerfile: Dockerfile
    container_name: ${CONTAINER_BASE_NAME}_ubuntu
    environment:
      - TZ=Asia/Tokyo
      # debconf がユーザにインタラクティブに問い合わせるのを回避する
      # 参考：
      # https://www.webdevqa.jp.net/ja/ubuntu/dpkgreconfigure-tzdata%E3%81%AE%E9%9D$
      - DEBIAN_FRONTEND=noninteractive
      - DEBCONF_NONINTERACTIVE_SEEN=true
    restart: always
    volumes:
      - ./mount/ubuntu:/data

  nodered:
    image: nodered/node-red:latest
    container_name: ${CONTAINER_BASE_NAME}_nodered_host
    environment:
      - FLOWS=${NODE_RED_FLOW}.json
      - NODE_RED_CREDENTIAL_SECRET=${NODE_RED_CREDENTIAL_SECRET}
      - TZ=Asia/Tokyo
    restart: always
    ports:
      - "${NODE_RED_PORT}:1880"
    volumes:
      - ./mount/nodered:/data

  # MySQL
  db:
    image: mariadb:latest
    container_name: ${CONTAINER_BASE_NAME}_mysql_host
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: 'Asia/Tokyo'
    restart: always
    volumes:
      - ./mount/db/data:/var/lib/mysql
      - ./mount/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mount/db/sql:/docker-entrypoint-initdb.d
    ports:
      - ${MYSQL_PORT}:3306

  # phpMyAdmin
  phpmyadmin:
    container_name: ${CONTAINER_BASE_NAME}_phpmyadmin
    depends_on: 
      - db
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=${CONTAINER_BASE_NAME}_mysql_host
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    ports:
      - ${PMA_PORT}:80  

  nginx:
    container_name: ${CONTAINER_BASE_NAME}_nginx
    image: nginx
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./mount/nginx/public:/usr/share/nginx/html

  superset:
    container_name: ${CONTAINER_BASE_NAME}_superset
    image: apache/superset
    ports:
      - ${SUPERSET_PORT}:8088
    volumes:
      - ./mount/superset:/var/lib/superset

  metabase:
    container_name: ${CONTAINER_BASE_NAME}_metabase
    image: metabase/metabase
    ports:
      - ${METABASE_PORT}:3000
    volumes:
      - ./mount/metabase:/metabase
